// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestProject1
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinControl uIGengAreyousureAlert = this.UICDocumentsandSettingWindow.UIFileCDocumentsandSetDocument.UITestCustom.UIItemClient.UIGengAreyousureAlert;
            WinButton uIButtonIvanButton = this.UICDocumentsandSettingWindow.UIFileCDocumentsandSetDocument.UITestCustom.UIItemClient.UIButtonIvanButton;
            #endregion

            // Click 'Geng, Are you sure?' Alert
            Mouse.Click(uIGengAreyousureAlert, new Point(79, 77));

            // Click 'buttonIvan' button
            Mouse.Click(uIButtonIvanButton, new Point(30, 14));

            // Click 'Geng, Are you sure?' Alert
            Mouse.Click(uIGengAreyousureAlert, new Point(88, 77));
        }
        
        /// <summary>
        /// RecordedMethod2 - Use 'RecordedMethod2Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UILoginWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UILoginWindow.UIItemWindow1.UIItemEdit;
            WinButton uIOKButton = this.UILoginWindow.UIOKWindow.UIOKButton;
            WinButton uIOKButton1 = this.UIFlightReservationsWindow.UIOKWindow.UIOKButton;
            #endregion

            // Type 'mercury' in 'Unknown Name' text box
            uIItemEdit.Text = this.RecordedMethod2Params.UIItemEditText;

            // Click 'Unknown Name' text box
            Mouse.Click(uIItemEdit1, new Point(41, 7));

            // Type '********' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit1, this.RecordedMethod2Params.UIItemEditSendKeys, true);

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(13, 14));

            // Click 'OK' button
            Mouse.Click(uIOKButton1, new Point(35, 6));
        }
        
        #region Properties
        public virtual RecordedMethod2Params RecordedMethod2Params
        {
            get
            {
                if ((this.mRecordedMethod2Params == null))
                {
                    this.mRecordedMethod2Params = new RecordedMethod2Params();
                }
                return this.mRecordedMethod2Params;
            }
        }
        
        public UICDocumentsandSettingWindow UICDocumentsandSettingWindow
        {
            get
            {
                if ((this.mUICDocumentsandSettingWindow == null))
                {
                    this.mUICDocumentsandSettingWindow = new UICDocumentsandSettingWindow();
                }
                return this.mUICDocumentsandSettingWindow;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow();
                }
                return this.mUILoginWindow;
            }
        }
        
        public UIFlightReservationsWindow UIFlightReservationsWindow
        {
            get
            {
                if ((this.mUIFlightReservationsWindow == null))
                {
                    this.mUIFlightReservationsWindow = new UIFlightReservationsWindow();
                }
                return this.mUIFlightReservationsWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod2Params mRecordedMethod2Params;
        
        private UICDocumentsandSettingWindow mUICDocumentsandSettingWindow;
        
        private UILoginWindow mUILoginWindow;
        
        private UIFlightReservationsWindow mUIFlightReservationsWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class RecordedMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'mercury' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditText = "mercury";
        
        /// <summary>
        /// Type '********' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditSendKeys = "MuPpVtRqMtUuJ6Jr09X2ZvKKETndZ9Rd";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICDocumentsandSettingWindow : BrowserWindow
    {
        
        public UICDocumentsandSettingWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "C:\\Documents and Settings\\gengc\\Adobe Flash Builder 4\\Test\\bin-debug\\Test.html - " +
                "Microsoft Internet Explorer provided by Hewlet";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("C:\\Documents and Settings\\gengc\\Adobe Flash Builder 4\\Test\\bin-debug\\Test.html - " +
                    "Microsoft Internet Explorer provided by Hewlet");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIFileCDocumentsandSetDocument UIFileCDocumentsandSetDocument
        {
            get
            {
                if ((this.mUIFileCDocumentsandSetDocument == null))
                {
                    this.mUIFileCDocumentsandSetDocument = new UIFileCDocumentsandSetDocument(this);
                }
                return this.mUIFileCDocumentsandSetDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIFileCDocumentsandSetDocument mUIFileCDocumentsandSetDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIFileCDocumentsandSetDocument : HtmlDocument
    {
        
        public UIFileCDocumentsandSetDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "C:/Documents%20and%20Settings/gengc/Adobe%20Flash%20Builder%204/Test/bin-debug/Te" +
                "st.html";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "file://C:\\Documents and Settings\\gengc\\Adobe Flash Builder 4\\Test\\bin-debug\\Test." +
                "html";
            this.WindowTitles.Add("C:\\Documents and Settings\\gengc\\Adobe Flash Builder 4\\Test\\bin-debug\\Test.html - " +
                    "Microsoft Internet Explorer provided by Hewlet");
            #endregion
        }
        
        #region Properties
        public UITestCustom UITestCustom
        {
            get
            {
                if ((this.mUITestCustom == null))
                {
                    this.mUITestCustom = new UITestCustom(this);
                }
                return this.mUITestCustom;
            }
        }
        #endregion
        
        #region Fields
        private UITestCustom mUITestCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITestCustom : HtmlCustom
    {
        
        public UITestCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["Id"] = "Test";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Test";
            this.SearchProperties["TagName"] = "OBJECT";
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=Test name=Test classid=clsid:D27CDB6E";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("C:\\Documents and Settings\\gengc\\Adobe Flash Builder 4\\Test\\bin-debug\\Test.html - " +
                    "Microsoft Internet Explorer provided by Hewlet");
            #endregion
        }
        
        #region Properties
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
            this.SearchConfigurations.Remove(SearchConfiguration.VisibleOnly);
            this.WindowTitles.Add("C:\\Documents and Settings\\gengc\\Adobe Flash Builder 4\\Test\\bin-debug\\Test.html - " +
                    "Microsoft Internet Explorer provided by Hewlet");
            #endregion
        }
        
        #region Properties
        public WinControl UIGengAreyousureAlert
        {
            get
            {
                if ((this.mUIGengAreyousureAlert == null))
                {
                    this.mUIGengAreyousureAlert = new WinControl(this);
                    #region Search Criteria
                    this.mUIGengAreyousureAlert.SearchProperties[UITestControl.PropertyNames.Name] = "Geng, Are you sure?";
                    this.mUIGengAreyousureAlert.SearchProperties[UITestControl.PropertyNames.ControlType] = "Alert";
                    this.mUIGengAreyousureAlert.WindowTitles.Add("C:\\Documents and Settings\\gengc\\Adobe Flash Builder 4\\Test\\bin-debug\\Test.html - " +
                            "Microsoft Internet Explorer provided by Hewlet");
                    #endregion
                }
                return this.mUIGengAreyousureAlert;
            }
        }
        
        public WinButton UIButtonIvanButton
        {
            get
            {
                if ((this.mUIButtonIvanButton == null))
                {
                    this.mUIButtonIvanButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIButtonIvanButton.SearchProperties[WinButton.PropertyNames.Name] = "buttonIvan";
                    this.mUIButtonIvanButton.WindowTitles.Add("C:\\Documents and Settings\\gengc\\Adobe Flash Builder 4\\Test\\bin-debug\\Test.html - " +
                            "Microsoft Internet Explorer provided by Hewlet");
                    #endregion
                }
                return this.mUIButtonIvanButton;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIGengAreyousureAlert;
        
        private WinButton mUIButtonIvanButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UILoginWindow : WinWindow
    {
        
        public UILoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Login";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "3001";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2000";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIFlightReservationsWindow : WinWindow
    {
        
        public UIFlightReservationsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Flight Reservations";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Flight Reservations");
            #endregion
        }
        
        #region Properties
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow1 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Flight Reservations");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Flight Reservations");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
